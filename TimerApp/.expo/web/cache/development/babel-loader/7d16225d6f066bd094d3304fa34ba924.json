{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/veneetpadala/Documents/GitHub/swTimerApp/components/EditTaskScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { ListItem, Text, Card, Button } from 'react-native-elements';\nimport firebase from \"../Firebase\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport moment from \"moment\";\n\nvar EditTaskScreen = function (_Component) {\n  _inherits(EditTaskScreen, _Component);\n\n  var _super = _createSuper(EditTaskScreen);\n\n  function EditTaskScreen(props) {\n    var _this;\n\n    _classCallCheck(this, EditTaskScreen);\n\n    _this = _super.call(this, props);\n\n    _this._maybeRenderUploadingOverlay = function () {\n      if (_this.state.uploading) {\n        return React.createElement(View, {\n          style: [StyleSheet.absoluteFill, {\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            alignItems: 'center',\n            justifyContent: 'center'\n          }],\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          color: \"#fff\",\n          animating: true,\n          size: \"large\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }));\n      }\n    };\n\n    _this._maybeRenderImage = function () {\n      var image = _this.state.image;\n      console.log(\"uploaded \", _this.state.image);\n\n      if (!image) {\n        return;\n      }\n\n      return React.createElement(View, {\n        style: {\n          marginTop: 30,\n          width: 50,\n          borderRadius: 3,\n          elevation: 2\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          borderTopRightRadius: 3,\n          borderTopLeftRadius: 3,\n          shadowColor: 'rgba(0,0,0,1)',\n          shadowOpacity: 0.2,\n          shadowOffset: {\n            width: 4,\n            height: 4\n          },\n          shadowRadius: 5,\n          overflow: 'hidden'\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: image\n        },\n        style: {\n          width: 50,\n          height: 50\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      })));\n    };\n\n    _this._share = function () {\n      Share.share({\n        message: _this.state.image,\n        title: 'Check out this photo',\n        url: _this.state.image\n      });\n    };\n\n    _this._copyToClipboard = function () {\n      Clipboard.setString(_this.state.image);\n      alert('Copied image URL to clipboard');\n    };\n\n    _this._takePhoto = function _callee() {\n      var pickerResult;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 2:\n              pickerResult = _context.sent;\n\n              _this._handleImagePicked(pickerResult);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._pickImage = function _callee2() {\n      var pickerResult;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 2:\n              pickerResult = _context2.sent;\n\n              _this._handleImagePicked(pickerResult);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._handleImagePicked = function _callee3(pickerResult) {\n      var uploadUrl;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n\n              _this.setState({\n                uploading: true\n              });\n\n              if (pickerResult.cancelled) {\n                _context3.next = 7;\n                break;\n              }\n\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(uploadImageAsync(pickerResult.uri));\n\n            case 5:\n              uploadUrl = _context3.sent;\n\n              _this.setState({\n                image: uploadUrl\n              });\n\n            case 7:\n              _context3.next = 13;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n              alert('Upload failed, sorry :(');\n\n            case 13:\n              _context3.prev = 13;\n\n              _this.setState({\n                uploading: false\n              });\n\n              return _context3.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9, 13, 16]], Promise);\n    };\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var tasks = [];\n      var navigation = _this.props.navigation;\n      querySnapshot.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            taskName = _doc$data.taskName,\n            timeSeconds = _doc$data.timeSeconds,\n            sequenceNumber = _doc$data.sequenceNumber,\n            image = _doc$data.image;\n\n        console.log(\"Tasks data\");\n        console.log(doc.id);\n        console.log(JSON.parse(navigation.getParam('taskkey')));\n\n        if (JSON.parse(navigation.getParam('taskkey')) == doc.id) {\n          console.log(\"Identified task\");\n          var task = doc.data();\n\n          _this.setState({\n            key: JSON.parse(navigation.getParam('timerkey')),\n            taskKey: doc.id,\n            taskName: task.taskName,\n            timeSeconds: task.timeSeconds,\n            sequenceNumber: task.sequenceNumber,\n            image: task.image\n          });\n        }\n\n        tasks.push({\n          key: doc.id,\n          doc: doc,\n          taskName: taskName,\n          timeSeconds: timeSeconds,\n          sequenceNumber: sequenceNumber,\n          image: image\n        });\n      });\n      console.log(\"Setting state\");\n      console.log(_this.state);\n\n      _this.setState({\n        tasks: tasks,\n        isLoading: false\n      });\n\n      console.log(\"After setting the state\");\n      console.log(tasks.length);\n      console.log(tasks[0]);\n    };\n\n    _this.updateTextInput = function (text, field) {\n      var state = _this.state;\n      state[field] = text;\n\n      _this.setState(state);\n\n      console.log(\"setting field\", text, field);\n    };\n\n    var _navigation = _this.props.navigation;\n    _this.ref = firebase.firestore().collection('timers').doc(JSON.parse(_navigation.getParam('timerkey'))).collection('tasks');\n    _this.state = {\n      isLoading: true,\n      tasks: {},\n      key: ''\n    };\n    return _this;\n  }\n\n  _createClass(EditTaskScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n            case 2:\n              _context4.next = 4;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    }\n  }, {\n    key: \"updateTimerTask\",\n    value: function updateTimerTask() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var navigation = this.props.navigation;\n      console.log(\"updating field \", this.state.taskName);\n      var updateRef = firebase.firestore().collection('timers').doc(this.state.key).collection('tasks').doc(JSON.parse(navigation.getParam('taskkey')));\n      updateRef.set({\n        taskName: this.state.taskName,\n        timeSeconds: this.state.timeSeconds,\n        sequenceNumber: this.state.sequenceNumber\n      }).then(function (docRef) {\n        console.log(\"null ref\");\n\n        _this2.setState({\n          key: '',\n          taskName: '',\n          isLoading: false\n        });\n\n        _this2.props.navigation.goBack();\n      }).catch(function (error) {\n        console.error(\"Error adding document: \", error);\n\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var image = this.state.image;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.activity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.subContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'Name',\n        value: this.state.name,\n        onChangeText: function onChangeText(text) {\n          return _this3.updateTextInput(text, 'name');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 17\n        }\n      }, this._maybeRenderImage(), this._maybeRenderUploadingOverlay(), React.createElement(StatusBar, {\n        barStyle: \"default\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        onPress: this._pickImage,\n        title: \"Pick image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        style: {\n          flex: 1,\n          marginLeft: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        onPress: this._takePhoto,\n        title: \"Take photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: {\n          flex: 1,\n          marginTop: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        large: true,\n        leftIcon: {\n          name: 'save'\n        },\n        title: \"Save\",\n        onPress: function onPress() {\n          return _this3.saveTimer();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }\n      })));\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.activity,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#0000ff\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.subContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        placeholder: 'Sequence',\n        value: this.state.sequenceNumber,\n        onChangeText: function onChangeText(text) {\n          return _this3.updateTextInput(text, 'sequenceNumber');\n        },\n        keyboardType: 'numeric',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        placeholder: 'Task',\n        value: this.state.taskName,\n        onChangeText: function onChangeText(text) {\n          return _this3.updateTextInput(text, 'taskName');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        placeholder: 'Time',\n        value: this.state.timeSeconds,\n        onChangeText: function onChangeText(text) {\n          return _this3.updateTextInput(text, 'timeSeconds');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.button,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        large: true,\n        leftIcon: {\n          name: 'update'\n        },\n        title: \"Update\",\n        onPress: function onPress() {\n          return _this3.updateTimerTask();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return EditTaskScreen;\n}(Component);\n\nEditTaskScreen.navigationOptions = {\n  title: 'Edit Task'\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  subContainer: {\n    flex: 1,\n    paddingBottom: 20,\n    borderBottomWidth: 2,\n    borderBottomColor: '#CCCCCC'\n  },\n  activity: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  detailButton: {\n    marginTop: 10\n  }\n});\n\nfunction uploadImageAsync(uri) {\n  var blob, ref, snapshot;\n  return _regeneratorRuntime.async(function uploadImageAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(new Promise(function (resolve, reject) {\n            var xhr = new XMLHttpRequest();\n\n            xhr.onload = function () {\n              resolve(xhr.response);\n            };\n\n            xhr.onerror = function (e) {\n              console.log(e);\n              reject(new TypeError('Network request failed'));\n            };\n\n            xhr.responseType = 'blob';\n            xhr.open('GET', uri, true);\n            xhr.send(null);\n          }));\n\n        case 2:\n          blob = _context5.sent;\n          ref = firebase.storage().ref().child(Date.now() + 'taskimage');\n          console.log(\"in uploadimage \", ref);\n          _context5.next = 7;\n          return _regeneratorRuntime.awrap(ref.put(blob));\n\n        case 7:\n          snapshot = _context5.sent;\n          _context5.next = 10;\n          return _regeneratorRuntime.awrap(snapshot.ref.getDownloadURL());\n\n        case 10:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 11:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nexport default EditTaskScreen;","map":{"version":3,"sources":["/Users/veneetpadala/Documents/GitHub/swTimerApp/components/EditTaskScreen.js"],"names":["React","Component","ListItem","Text","Card","Button","firebase","ImagePicker","Permissions","moment","EditTaskScreen","props","_maybeRenderUploadingOverlay","state","uploading","StyleSheet","absoluteFill","backgroundColor","alignItems","justifyContent","_maybeRenderImage","image","console","log","marginTop","width","borderRadius","elevation","borderTopRightRadius","borderTopLeftRadius","shadowColor","shadowOpacity","shadowOffset","height","shadowRadius","overflow","uri","_share","Share","share","message","title","url","_copyToClipboard","Clipboard","setString","alert","_takePhoto","launchCameraAsync","allowsEditing","aspect","pickerResult","_handleImagePicked","_pickImage","launchImageLibraryAsync","setState","cancelled","uploadImageAsync","uploadUrl","onCollectionUpdate","querySnapshot","tasks","navigation","forEach","doc","data","taskName","timeSeconds","sequenceNumber","id","JSON","parse","getParam","task","key","taskKey","push","isLoading","length","updateTextInput","text","field","ref","firestore","collection","askAsync","CAMERA_ROLL","CAMERA","unsubscribe","onSnapshot","updateRef","set","then","docRef","goBack","catch","error","styles","activity","container","subContainer","name","button","flex","marginLeft","saveTimer","updateTimerTask","navigationOptions","create","padding","paddingBottom","borderBottomWidth","borderBottomColor","position","left","right","top","bottom","detailButton","Promise","resolve","reject","xhr","XMLHttpRequest","onload","response","onerror","e","TypeError","responseType","open","send","blob","storage","child","Date","now","put","snapshot","getDownloadURL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {StyleSheet, ScrollView, ActivityIndicator, View, FlatList, TextInput, Image, StatusBar} from 'react-native';\nimport {  ListItem, Text, Card, Button } from 'react-native-elements';\nimport firebase from '../Firebase';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport moment from \"moment\"\n\n\nclass EditTaskScreen extends Component {\n    static navigationOptions = {\n        title: 'Edit Task',\n    };\n\n    constructor(props) {\n        super(props);\n        const { navigation } = this.props;\n        this.ref = firebase.firestore().collection('timers').doc(JSON.parse(navigation.getParam('timerkey'))).collection('tasks');\n\n        this.state = {\n            isLoading: true,\n            tasks: {},\n            key: ''\n        };\n    }\n\n    async componentDidMount() {\n        await Permissions.askAsync(Permissions.CAMERA_ROLL);\n        await Permissions.askAsync(Permissions.CAMERA);\n    }\n\n\n    _maybeRenderUploadingOverlay = () => {\n        if (this.state.uploading) {\n            return (\n                <View\n                    style={[\n                        StyleSheet.absoluteFill,\n                        {\n                            backgroundColor: 'rgba(0,0,0,0.4)',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        },\n                    ]}>\n                    <ActivityIndicator color=\"#fff\" animating size=\"large\" />\n                </View>\n            );\n        }\n    };\n\n    _maybeRenderImage = () => {\n        let { image } = this.state;\n        console.log(\"uploaded \",this.state.image);\n        if (!image) {\n            return;\n        }\n\n        return (\n            <View\n                style={{\n                    marginTop: 30,\n                    width: 50,\n                    borderRadius: 3,\n                    elevation: 2,\n                }}>\n                <View\n                    style={{\n                        borderTopRightRadius: 3,\n                        borderTopLeftRadius: 3,\n                        shadowColor: 'rgba(0,0,0,1)',\n                        shadowOpacity: 0.2,\n                        shadowOffset: { width: 4, height: 4 },\n                        shadowRadius: 5,\n                        overflow: 'hidden',\n                    }}>\n                    <Image source={{ uri: image }} style={{ width: 50, height: 50 }} />\n                </View>\n\n            </View>\n        );\n    };\n\n    _share = () => {\n        Share.share({\n            message: this.state.image,\n            title: 'Check out this photo',\n            url: this.state.image,\n        });\n    };\n\n    _copyToClipboard = () => {\n        Clipboard.setString(this.state.image);\n        alert('Copied image URL to clipboard');\n    };\n\n    _takePhoto = async () => {\n        let pickerResult = await ImagePicker.launchCameraAsync({\n            allowsEditing: true,\n            aspect: [4, 3],\n        });\n\n        this._handleImagePicked(pickerResult);\n    };\n\n    _pickImage = async () => {\n        let pickerResult = await ImagePicker.launchImageLibraryAsync({\n            allowsEditing: true,\n            aspect: [4, 3],\n        });\n\n        this._handleImagePicked(pickerResult);\n    };\n\n    _handleImagePicked = async pickerResult => {\n        try {\n            this.setState({ uploading: true });\n\n            if (!pickerResult.cancelled) {\n                const uploadUrl = await uploadImageAsync(pickerResult.uri);\n                this.setState({ image: uploadUrl });\n            }\n        } catch (e) {\n            console.log(e);\n            alert('Upload failed, sorry :(');\n        } finally {\n            this.setState({ uploading: false });\n        }\n    };\n\n\n\n\n\n    onCollectionUpdate = (querySnapshot) => {\n        const tasks = [];\n        const { navigation } = this.props;\n        querySnapshot.forEach((doc) => {\n            const { taskName, timeSeconds, sequenceNumber, image } = doc.data();\n            console.log(\"Tasks data\")\n            console.log(doc.id);\n            console.log(JSON.parse(navigation.getParam('taskkey')));\n            if (JSON.parse(navigation.getParam('taskkey')) == doc.id) {\n                console.log(\"Identified task\");\n                const task = doc.data();\n                this.setState({\n                    key: JSON.parse(navigation.getParam('timerkey')),\n                    taskKey: doc.id,\n                    taskName: task.taskName,\n                    timeSeconds: task.timeSeconds,\n                    sequenceNumber: task.sequenceNumber,\n                    image: task.image,\n                });\n            }\n            tasks.push({\n                key: doc.id,\n                doc, // DocumentSnapshot\n                taskName,\n                timeSeconds,\n                sequenceNumber,\n                image\n            });\n        });\n        console.log(\"Setting state\");\n        console.log(this.state);\n        this.setState({\n            tasks : tasks,\n            isLoading: false,\n        });\n        console.log(\"After setting the state\");\n        console.log(tasks.length);\n        console.log(tasks[0]);\n\n\n    }\n\n    componentDidMount() {\n\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n    }\n\n\n    updateTextInput = (text, field) => {\n        const state = this.state\n        state[field] = text;\n        this.setState(state);\n        console.log(\"setting field\",text,field);\n    }\n\n    updateTimerTask() {\n\n        this.setState({\n            isLoading: true,\n        });\n        const { navigation } = this.props;\n        console.log(\"updating field \",this.state.taskName);\n        const updateRef = firebase.firestore().collection('timers').doc(this.state.key).collection('tasks').doc(JSON.parse(navigation.getParam('taskkey')));\n        updateRef.set({\n            taskName: this.state.taskName,\n            timeSeconds: this.state.timeSeconds,\n            sequenceNumber: this.state.sequenceNumber\n        }).then((docRef) => {\n            console.log(\"null ref\");\n            this.setState({\n                key: '',\n                taskName: '',\n                isLoading: false,\n            });\n            this.props.navigation.goBack();\n        })\n            .catch((error) => {\n                console.error(\"Error adding document: \", error);\n                this.setState({\n                    isLoading: false,\n                });\n            });\n    }\n\n\n\n\n    render() {\n        let { image } = this.state;\n\n        if(this.state.isLoading){\n            return(\n                <View style={styles.activity}>\n                    <ActivityIndicator size=\"large\" color=\"#0000ff\"/>\n                </View>\n            )\n        }\n        return (\n            <ScrollView style={styles.container}>\n                <View style={styles.subContainer}>\n                    <TextInput\n                        placeholder={'Name'}\n                        value={this.state.name}\n                        onChangeText={(text) => this.updateTextInput(text, 'name')}\n                    />\n                </View>\n                <View>\n\n\n\n\n                    {this._maybeRenderImage()}\n                    {this._maybeRenderUploadingOverlay()}\n\n                    <StatusBar barStyle=\"default\" />\n                </View>\n\n\n                <View style={styles.button}>\n                    <View style={{flex:1 }} >\n                        <Button\n                            onPress={this._pickImage}\n                            title=\"Pick image\"\n                        />\n                    </View>\n\n                    <View style={{flex:1 , marginLeft:10}} >\n                        <Button onPress={this._takePhoto} title=\"Take photo\" />\n                    </View>\n\n\n                </View>\n                <View style={{flex:1 , marginTop:10}} >\n                    <Button\n                        large\n                        leftIcon={{name: 'save'}}\n                        title='Save'\n                        onPress={() => this.saveTimer()} />\n                </View>\n            </ScrollView>\n        );\n\n        if(this.state.isLoading){\n            return(\n                <View style={styles.activity}>\n                    <ActivityIndicator size=\"large\" color=\"#0000ff\"/>\n                </View>\n            )\n        }\n        return (\n            <ScrollView style={styles.container}>\n                <View style={styles.subContainer}>\n                    <TextInput\n                        placeholder={'Sequence'}\n                        value={this.state.sequenceNumber}\n                        onChangeText={(text) => this.updateTextInput(text, 'sequenceNumber')}\n                    keyboardType={'numeric'}\n                />\n                    <TextInput\n                        placeholder={'Task'}\n                        value={this.state.taskName}\n                        onChangeText={(text) => this.updateTextInput(text, 'taskName')}\n                    />\n                    <TextInput\n                        placeholder={'Time'}\n                        value={this.state.timeSeconds}\n                        onChangeText={(text) => this.updateTextInput(text, 'timeSeconds')}\n                    />\n\n                </View>\n\n                <View style={styles.button}>\n                    <Button\n                        large\n                        leftIcon={{name: 'update'}}\n                        title='Update'\n                        onPress={() => this.updateTimerTask()} />\n                </View>\n            </ScrollView>\n\n        );\n    }\n\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20\n    },\n    subContainer: {\n        flex: 1,\n        paddingBottom: 20,\n        borderBottomWidth: 2,\n        borderBottomColor: '#CCCCCC',\n    },\n    activity: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    detailButton: {\n        marginTop: 10\n    }\n})\nasync function uploadImageAsync(uri) {\n    // Why are we using XMLHttpRequest? See:\n    // https://github.com/expo/expo/issues/2402#issuecomment-443726662\n    const blob = await new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.onload = function() {\n            resolve(xhr.response);\n        };\n        xhr.onerror = function(e) {\n            console.log(e);\n            reject(new TypeError('Network request failed'));\n        };\n        xhr.responseType = 'blob';\n        xhr.open('GET', uri, true);\n        xhr.send(null);\n    });\n\n    const ref = firebase\n        .storage()\n        .ref()\n        .child(Date.now()+'taskimage');\n    console.log(\"in uploadimage \",ref);\n    const snapshot = await ref.put(blob);\n\n\n    // We're done with the blob, close and release it\n    //blob.close();\n\n    return await snapshot.ref.getDownloadURL();\n}\nexport default EditTaskScreen;"]},"metadata":{},"sourceType":"module"}